{"version":3,"sources":["../../src/components/Progress.js"],"names":["Progress","container","options","init","self","skin","addClass","bar","$","getTemplate","setValue","value","appendTo","initEvents","startPosition","x","y","endPosition","startValue","children","on","e","preventDefault","stopPropagation","touch","changedTouches","pageX","pageY","barWidth","width","moved","setValueByDrag","val","css","dragCallback","call","toFixed","callback"],"mappings":";;;;;;;;;;;;;;;;;IAEaA,Q,WAAAA,Q;AACT,sBAAYC,SAAZ,EAAuBC,OAAvB,EAAgC;AAAA;;AAC5B,aAAKD,SAAL,GAAiBA,SAAjB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,IAAL;AACH;;;;+BAEM;;AAEH,gBAAIC,OAAO,IAAX;;AAEA,gBAAIA,KAAKF,OAAL,CAAaG,IAAjB,EAAuB;AACnBD,qBAAKH,SAAL,CAAeK,QAAf,CAAwB,UAAUF,KAAKF,OAAL,CAAaG,IAA/C;AACH;AACDD,iBAAKG,GAAL,GAAWC,EAAEJ,KAAKK,WAAL,EAAF,CAAX;AACAL,iBAAKM,QAAL,CAAcN,KAAKF,OAAL,CAAaS,KAA3B;;AAEAP,iBAAKG,GAAL,CAASK,QAAT,CAAkBR,KAAKH,SAAvB;AACAG,iBAAKS,UAAL;AAEH;;;sCAEa;AACV;AAKH;;;qCAEY;AACT,gBAAIT,OAAO,IAAX;;AAEA,gBAAIU,gBAAgB;AAChBC,mBAAG,CADa;AAEhBC,mBAAG;AAFa,aAApB;AAIA,gBAAIC,cAAc;AACdF,mBAAG,CADW;AAEdC,mBAAG;AAFW,aAAlB;;AAKA,gBAAIE,aAAa,CAAjB;;AAGAd,iBAAKG,GAAL,CAASY,QAAT,CAAkB,GAAlB,EACKC,EADL,CACQ,YADR,EACsB,UAAUC,CAAV,EAAa;AAC3BA,kBAAEC,cAAF;AACAD,kBAAEE,eAAF;AACAL,6BAAad,KAAKF,OAAL,CAAaS,KAA1B;;AAEA,oBAAIa,QAAQH,EAAEI,cAAF,CAAiB,CAAjB,CAAZ;;AAEAX,8BAAcC,CAAd,GAAkBS,MAAME,KAAxB;AACAZ,8BAAcE,CAAd,GAAkBQ,MAAMG,KAAxB;AAEH,aAXL;;AAaAvB,iBAAKH,SAAL,CAAemB,EAAf,CAAkB,WAAlB,EAA+B,UAAUC,CAAV,EAAa;AACxCA,kBAAEC,cAAF;AACAD,kBAAEE,eAAF;AACA,oBAAIC,QAAQH,EAAEI,cAAF,CAAiB,CAAjB,CAAZ;AACA,oBAAIG,WAAWxB,KAAKH,SAAL,CAAe4B,KAAf,EAAf;;AAEAZ,4BAAYF,CAAZ,GAAgBS,MAAME,KAAtB;AACAT,4BAAYD,CAAZ,GAAgBQ,MAAMG,KAAtB;;AAEA,oBAAIG,QAAQb,YAAYF,CAAZ,GAAgBD,cAAcC,CAA1C;AACAe,wBAASA,QAAQF,QAAT,GAAqB,GAA7B;;AAEAxB,qBAAK2B,cAAL,CAAoB,CAACb,UAAD,GAAcY,KAAlC;AAEH,aAdD;AAeH;;;iCAEQE,G,EAAK;;AAEV,gBAAI,CAACA,GAAL,EAAU;AACNA,sBAAM,CAAN;AACH;;AAED,iBAAK9B,OAAL,CAAaS,KAAb,GAAqBqB,GAArB;AACA,iBAAKzB,GAAL,CAAS0B,GAAT,CAAa,OAAb,EAAsBD,MAAM,GAA5B;AACH;;;uCAGcA,G,EAAK;;AAEhB,gBAAI5B,OAAO,IAAX;;AAEA,gBAAIA,KAAK8B,YAAT,EAAuB;AACnB9B,qBAAK8B,YAAL,CAAkBC,IAAlB,CAAuB/B,IAAvB,EAA4B4B,GAA5B;AACH,aAFD,MAGK;AACD5B,qBAAKM,QAAL,CAAcsB,IAAII,OAAJ,CAAY,CAAZ,CAAd;AACH;AACJ;;;wCAEeC,Q,EAAU;AACtB,iBAAKH,YAAL,GAAoBG,QAApB;AACH;;;mCAEU;AACP,mBAAO,KAAKnC,OAAL,CAAaS,KAApB;AACH","file":"Progress.js","sourcesContent":["\n\nexport class Progress {\n    constructor(container, options) {\n        this.container = container;\n        this.options = options;\n        this.init();\n    }\n\n    init() {\n\n        let self = this;\n\n        if (self.options.skin) {\n            self.container.addClass('skin-' + self.options.skin);\n        }\n        self.bar = $(self.getTemplate());\n        self.setValue(self.options.value);\n\n        self.bar.appendTo(self.container);\n        self.initEvents();\n\n    }\n\n    getTemplate() {\n        return `\n            <div class=\"component-progress-value\">\n                <i></i>\n            </div>\n        `;\n    }\n\n    initEvents() {\n        let self = this;\n\n        let startPosition = {\n            x: 0,\n            y: 0\n        }\n        let endPosition = {\n            x: 0,\n            y: 0\n        };\n\n        let startValue = 0;\n\n        \n        self.bar.children('i')\n            .on('touchstart', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                startValue = self.options.value;\n\n                let touch = e.changedTouches[0];\n\n                startPosition.x = touch.pageX;\n                startPosition.y = touch.pageY;\n                \n            });\n\n        self.container.on('touchmove', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            let touch = e.changedTouches[0];\n            let barWidth = self.container.width();\n\n            endPosition.x = touch.pageX;\n            endPosition.y = touch.pageY;\n\n            let moved = endPosition.x - startPosition.x;\n            moved = (moved / barWidth) * 100;\n            \n            self.setValueByDrag(+startValue + moved);\n\n        });\n    }\n\n    setValue(val) {\n\n        if (!val) {\n            val = 0;\n        }\n\n        this.options.value = val;\n        this.bar.css('width', val + '%');\n    }\n\n\n    setValueByDrag(val) {\n        \n        let self = this;\n\n        if (self.dragCallback) {\n            self.dragCallback.call(self,val);\n        }\n        else {\n            self.setValue(val.toFixed(2));\n        }\n    }\n\n    setDragCallback(callback) {\n        this.dragCallback = callback;\n    }\n\n    getValue() {\n        return this.options.value;\n    }\n\n\n}"]}