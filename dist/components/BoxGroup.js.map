{"version":3,"sources":["../../src/components/BoxGroup.js"],"names":[],"mappings":"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","file":"BoxGroup.js","sourcesContent":["\nimport { EventBase } from './EventBase';\n\n\nexport class BoxGroup extends EventBase {\n    constructor(container, options) {\n        super(container);\n        this.options = options;\n        this.init();\n    }\n    init() {\n        this.container.html(\n            this.getTemplate()\n        );\n        this.boxes = this.container.find('input[type=\"checkbox\"]');\n        this.initEvents();\n    }\n    initEvents() {\n\n        let group = this;\n        let options = group.options;\n        let container = group.container;\n        let klass = options.klass || {};\n\n        container.on('click', 'input[type=\"checkbox\"]', function() {\n            let target = this;\n            let $target = $(target);\n            let $parent = $target.parent();\n\n            if (options.mode === 'single') {\n\n                if (!target.checked) {\n                    return;\n                }\n                group.boxes.each(\n                    (index, item) =>{\n                        if (item !== target ) {\n                            item.checked = false;\n                            if (klass.active) {\n                                $(item).parent().removeClass(klass.active)\n                                    .addClass(klass.normal);\n                            }\n\n                        }\n                    }\n                );\n            }\n\n\n            if (klass.active) {\n                if (target.checked) {\n                    $parent.addClass(klass.active).removeClass(klass.normal);\n                }\n                else {\n                    $parent.removeClass(klass.active).addClass(klass.normal);\n                }\n            }\n\n            group.trigger('changed');\n        });\n    }\n    getTemplate() {\n        let result = [];\n        let options = this.options;\n        let klass = options.klass || {};\n        let dataSource = options.dataSource;\n        dataSource.forEach(\n            (item, index) => {\n                if (typeof item !== 'object') {\n\n                    dataSource[index] = {\n                        value: index,\n                        label: item\n                    };\n                    item = dataSource[index];\n                }\n\n\n                result.push(`\n                    <label class=\"${klass.normal}\">\n                        <input name=\"${options.name}\" type=\"checkbox\" value=\"${item.value}\"/>\n                        ${item.label}\n                    </label>\n                `);\n\n            }\n        );\n\n        return result.join('');\n    }\n\n    getValue() {\n        let result = [];\n        let dataSource = this.options.dataSource;\n        this.boxes.each(\n            (index, item) => {\n                if (item.checked) {\n                    result.push(dataSource[index]);\n                }\n            }\n        );\n\n        return result;\n    }\n\n    changeMode(mode) {\n        let options = this.options;\n        if (mode === options.mode) {\n            return;\n        }\n        else if (mode === 'single') {\n            this.boxes.each(\n                (index, item) => {\n                    item.checked = false;\n                    $(item).parent().removeClass(options.klass.active);\n                }\n            );\n            this.trigger('changed');\n        }\n\n        this.options.mode = mode;\n\n\n    }\n}\n"]}