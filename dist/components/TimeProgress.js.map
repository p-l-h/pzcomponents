{"version":3,"sources":["../../src/components/TimeProgress.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA;;;;IAGa,Y,WAAA,Y;;;;;;;;;;;;;;AAaT,0BAAY,SAAZ,EAAuB,OAAvB,EAAgC;AAAA;;AAC5B,aAAK,SAAL,GAAiB,SAAjB;AACA,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,IAAL;AACH;;;;+BAGM;;AAEH,gBAAI,OAAO,IAAX;AACA,iBAAK,SAAL,CAAe,IAAf,CAAoB,KAAK,WAAL,EAApB;;AAEA,gBAAI,KAAK,OAAL,CAAa,IAAjB,EAAuB;AACnB,qBAAK,SAAL,CAAe,QAAf,CAAwB,UAAU,KAAK,OAAL,CAAa,IAA/C;AACH;;AAED,iBAAK,QAAL,GAAgB,uBACZ,KAAK,SAAL,CAAe,IAAf,CAAoB,qBAApB,CADY,EAEZ;AACI,uBAAO,KAAK,iBAAL,EADX;AAEI,sBAAM,KAAK,OAAL,CAAa;AAFvB,aAFY,CAAhB;;AAQA,iBAAK,QAAL,CAAc,eAAd,CACI,UAAU,OAAV,EAAmB;AACf,oBAAI,UAAU,GAAd,EAAmB;AACf,8BAAU,GAAV;AACH;;AAED,oBAAI,cAAc,KAAK,OAAL,CAAa,KAAb,GAAqB,OAArB,GAA+B,GAAjD;;AAEA,oBAAI,KAAK,kBAAT,EAA6B;AACzB,yBAAK,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B,EAAmC,WAAnC;AACH,iBAFD,MAGK;AACD,yBAAK,QAAL,CAAc,WAAd;AAEH;AACJ,aAfL;;AAkBA,iBAAK,eAAL,GAAuB,KAAK,SAAL,CAAe,QAAf,CAAwB,IAAxB,CAAvB;AACA,iBAAK,aAAL,GAAqB,KAAK,SAAL,CAAe,QAAf,CAAwB,QAAxB,CAArB;AAEH;;;sCAEa;AACV,gBAAI,OAAO,IAAX;AACA,0CACU,KAAK,aAAL,CAAmB,KAAK,OAAL,CAAa,KAAhC,CADV,qGAIc,KAAK,aAAL,CAAmB,KAAK,OAAL,CAAa,KAAhC,CAJd;AAMH;;;iCAEQ,G,EAAK;;AAEV,kBAAM,OAAO,CAAb;AACA,gBAAI,OAAO,IAAX;;AAEA,iBAAK,OAAL,CAAa,KAAb,GAAqB,GAArB;AACA,iBAAK,cAAL;AACA,iBAAK,eAAL,CAAqB,IAArB,CAA0B,KAAK,aAAL,CAAmB,GAAnB,CAA1B;AACH;;;iCAEQ,K,EAAO;AACZ,gBAAI,OAAO,IAAX;AACA,gBAAG,UAAU,KAAK,OAAL,CAAa,KAA1B,EAAiC;AAC7B;AACH;AACD,iBAAK,OAAL,CAAa,KAAb,GAAqB,KAArB;AACA,iBAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,aAAL,CAAmB,KAAnB,CAAxB;AACH;;;4CAEmB;AAChB,gBAAI,OAAO,IAAX;AACA,mBAAO,CAAE,KAAK,OAAL,CAAa,KAAb,GAAqB,KAAK,OAAL,CAAa,KAAnC,GAA4C,GAA7C,EAAkD,OAAlD,CAA0D,CAA1D,CAAP;AACH;;;yCAEgB;AACb,gBAAI,OAAO,IAAX;AACA,iBAAK,QAAL,CAAc,QAAd,CAAuB,KAAK,iBAAL,EAAvB;AACH;;;8CAEqB,Q,EAAU;AAC5B,iBAAK,kBAAL,GAA0B,QAA1B;AACH;;;sCAEa,O,EAAS;AACnB,gBAAI,UAAU,KAAK,KAAL,CAAW,UAAU,EAArB,CAAd;AACA,sBAAU,KAAK,KAAL,CAAW,UAAU,EAArB,CAAV;;AAEA,gBAAI,UAAU,EAAd,EAAkB;AACd,0BAAU,MAAM,OAAhB;AACH;;AAED,gBAAI,UAAU,EAAd,EAAkB;AACd,0BAAU,MAAM,OAAhB;AACH;;AAED,mBAAO,UAAU,GAAV,GAAgB,OAAvB;AACH","file":"TimeProgress.js","sourcesContent":["\n\n\nimport {Progress} from './Progress';\n\n\nexport class TimeProgress {\n\n    /**\n     * Creates an instance of TimeProgress.\n     * 示例options\n     * {\n     *    total: 60,\n     *    value: 30\n     * }\n     * @param {ZeptoElelent} container\n     * @param {Object} options\n     *\n     */\n    constructor(container, options) {\n        this.container = container;\n        this.options = options;\n        this.init();\n    }\n\n\n    init() {\n\n        let self = this;\n        self.container.html(self.getTemplate());\n\n        if (self.options.skin) {\n            self.container.addClass('skin-' + self.options.skin);\n        }\n\n        self.progress = new Progress(\n            self.container.find('.component-progress'),\n            {\n                value: self.calculateProgress(),\n                skin: self.options.skin\n            }\n        );\n\n        self.progress.setDragCallback(\n            function (percent) {\n                if (percent > 100) {\n                    percent = 100;\n                }\n\n                let currentTime = self.options.total * percent / 100;\n\n                if (self.valueUpdatedByHand) {\n                    self.valueUpdatedByHand.call(this, currentTime);\n                }\n                else {\n                    self.setValue(currentTime);\n\n                }\n            }\n        );\n\n        self.currentTimeElem = self.container.children('em');\n        self.totalTimeElem = self.container.children('strong');\n\n    }\n\n    getTemplate() {\n        let self = this;\n        return `\n            <em>${self.formatSeconds(self.options.value)}</em>\n            <div class=\"component-progress\">\n            </div>\n            <strong>${self.formatSeconds(self.options.total)}</strong>\n        `;\n    }\n\n    setValue(val) {\n\n        val = val || 0;\n        let self = this;\n\n        self.options.value = val;\n        self.updateProgress();\n        self.currentTimeElem.html(self.formatSeconds(val));\n    }\n\n    setTotal(total) {\n        let self = this;\n        if(total === self.options.total) {\n            return;\n        }\n        self.options.total = total;\n        self.totalTimeElem.html(self.formatSeconds(total));\n    }\n\n    calculateProgress() {\n        let self = this;\n        return ((self.options.value / self.options.total) * 100).toFixed(2);\n    }\n\n    updateProgress() {\n        let self = this;\n        self.progress.setValue(self.calculateProgress());\n    }\n\n    setValueUpdatedByHand(callback) {\n        this.valueUpdatedByHand = callback;\n    }\n\n    formatSeconds(seconds) {\n        let minutes = Math.floor(seconds / 60);\n        seconds = Math.floor(seconds % 60);\n\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n\n        if (seconds < 10) {\n            seconds = '0' + seconds;\n        }\n\n        return minutes + ':' + seconds;\n    }\n}\n"]}