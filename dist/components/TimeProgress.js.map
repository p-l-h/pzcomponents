{"version":3,"sources":["../../src/components/TimeProgress.js"],"names":["TimeProgress","container","options","init","self","html","getTemplate","skin","addClass","progress","find","value","calculateProgress","setDragCallback","percent","currentTime","total","valueUpdatedByHand","call","setValue","currentTimeElem","children","totalTimeElem","formatSeconds","val","updateProgress","toFixed","callback","seconds","minutes","Math","floor"],"mappings":"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","file":"TimeProgress.js","sourcesContent":["\n\n\nimport {Progress} from './Progress';\n\n\nexport class TimeProgress {\n\n    /**\n     * Creates an instance of TimeProgress.\n     * 示例options\n     * {\n     *    total: 60,\n     *    value: 30\n     * }\n     * @param {ZeptoElelent} container\n     * @param {Object} options\n     *\n     */\n    constructor(container, options) {\n        this.container = container;\n        this.options = options;\n        this.init();\n    }\n\n\n    init() {\n\n        let self = this;\n        self.container.html(self.getTemplate());\n\n        if (self.options.skin) {\n            self.container.addClass('skin-' + self.options.skin);\n        }\n\n        self.progress = new Progress(\n            self.container.find('.component-progress'),\n            {\n                value: self.calculateProgress(),\n                skin: self.options.skin\n            }\n        );\n\n        self.progress.setDragCallback(\n            function (percent) {\n                if (percent > 100) {\n                    percent = 100;\n                }\n\n                let currentTime = self.options.total * percent / 100;\n\n                if (self.valueUpdatedByHand) {\n                    self.valueUpdatedByHand.call(this, currentTime);\n                }\n                else {\n                    self.setValue(currentTime);\n\n                }\n            }\n        );\n\n        self.currentTimeElem = self.container.children('em');\n        self.totalTimeElem = self.container.children('strong');\n\n    }\n\n    getTemplate() {\n        let self = this;\n        return `\n            <em>${self.formatSeconds(self.options.value)}</em>\n            <div class=\"component-progress\">\n            </div>\n            <strong>${self.formatSeconds(self.options.total)}</strong>\n        `;\n    }\n\n    setValue(val) {\n\n        val = val || 0;\n        let self = this;\n\n        self.options.value = val;\n        self.updateProgress();\n        self.currentTimeElem.html(self.formatSeconds(val));\n    }\n\n    setTotal(total) {\n        let self = this;\n        if(total === self.options.total) {\n            return;\n        }\n        self.options.total = total;\n        self.totalTimeElem.html(self.formatSeconds(total));\n    }\n\n    calculateProgress() {\n        let self = this;\n        return ((self.options.value / self.options.total) * 100).toFixed(2);\n    }\n\n    updateProgress() {\n        let self = this;\n        self.progress.setValue(self.calculateProgress());\n    }\n\n    setValueUpdatedByHand(callback) {\n        this.valueUpdatedByHand = callback;\n    }\n\n    formatSeconds(seconds) {\n        let minutes = Math.floor(seconds / 60);\n        seconds = Math.floor(seconds % 60);\n\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n\n        if (seconds < 10) {\n            seconds = '0' + seconds;\n        }\n\n        return minutes + ':' + seconds;\n    }\n}\n"]}