{"version":3,"sources":["../../src/components/SearchBar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;;;IAEa,S,WAAA,S;;;;;;;;;;;;;;;AAYT,uBAAY,SAAZ,EAAuB,OAAvB,EAAgC;AAAA;;AAAA,gJACtB,SADsB;;AAG5B,cAAK,OAAL,GAAe,OAAf;AACA,cAAK,IAAL;AAJ4B;AAK/B;;;;+BACM;AACH,iBAAK,SAAL,CAAe,IAAf,CACI,KAAK,WAAL,EADJ;;AAIA,iBAAK,WAAL,GAAmB,KAAK,SAAL,CAAe,IAAf,CAAoB,sBAApB,CAAnB;AACA,iBAAK,UAAL,GAAkB,KAAK,SAAL,CAAe,IAAf,CAAoB,MAApB,CAAlB;;AAGA,iBAAK,UAAL;AACH;;;sCAEa;;AAEV,gBAAI,UAAU,KAAK,OAAnB;AACA,qFACqD,QAAQ,MAD7D,kBACgF,QAAQ,MADxF,oHAGyC,QAAQ,KAHjD,wBAGwE,QAAQ,WAAR,IAAqB,EAH7F;AAQH;;;qCAGY;;AAET,gBAAI,OAAO,IAAX;AACA,gBAAI,UAAU,KAAK,OAAnB;;AAEA,iBAAK,UAAL,CACK,EADL,CACQ,QADR,EACkB,UAAU,CAAV,EAAa;;AAEvB,kBAAE,cAAF;;AAEA,oBAAI,WAAW,EAAf;AACA,yBAAS,QAAQ,KAAjB,IAA0B,KAAK,WAAL,CAAiB,GAAjB,GAAuB,IAAvB,EAA1B;;AAEA,oBAAI,QAAQ,SAAZ,EAAuB;AACnB,+BAAW,QAAQ,SAAR,CAAkB,QAAlB,CAAX;AACH;;AAGD,uCACI,QAAQ,MADZ,EAEI,QAFJ,EAGI,UAAC,IAAD,EAAU;AACN,4BAAQ,QAAR,CAAiB,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B;AACH,iBALL;AAQH,aArBL,EAsBK,EAtBL,CAsBQ,OAtBR,EAsBiB,UAAU,CAAV,EAAa;AACtB,qBAAK,KAAL;AACH,aAxBL;;AA0BA,cAAE,QAAF,EAAY,EAAZ,CAAe,OAAf,EAAwB,UAAU,CAAV,EAAa;AACjC,oBAAI,OAAO,KAAK,UAAL,CAAgB,CAAhB,CAAX;;AAEA,oBAAI,CAAC,EAAE,QAAF,CAAW,IAAX,EAAiB,EAAE,MAAnB,CAAL,EAAiC;AAC7B,yBAAK,IAAL;AACH;AACJ,aAND;AAOH;;;;;;;;;;8BAOK,W,EAAa;AACf,iBAAK,MAAL,GAAc,IAAd;AACA,iBAAK,SAAL,CAAe,QAAf,CAAwB,QAAxB;AACA,aAAC,WAAD,IAAgB,KAAK,WAAL,CAAiB,KAAjB,EAAhB;AACH;;;;;;;;;;6BAOI,W,EAAa;AACd,iBAAK,MAAL,GAAc,KAAd;AACA,iBAAK,SAAL,CAAe,WAAf,CAA2B,QAA3B;AACA,aAAC,WAAD,IAAgB,KAAK,WAAL,CAAiB,IAAjB,EAAhB;AAEH","file":"SearchBar.js","sourcesContent":["\n\nimport {EventBase} from './EventBase';\nimport {postJson} from '../common/functions/request';\n\nexport class SearchBar extends EventBase {\n\n    /**\n     * Creates an instance of SearchBar.\n     *\n     * @param {ZeptoElem} container 容器\n     * @param {Object} options 配置项\n     * @property {string} options.method GET OR POST\n     * @property {string} options.action 要请求的url\n     * @property {Function} options.getParams 获取查询参数\n     * @property {Function} options.searched 搜索结束之后\n     */\n    constructor(container, options) {\n        super(container);\n\n        this.options = options;\n        this.init();\n    }\n    init() {\n        this.container.html(\n            this.getTemplate()\n        );\n\n        this.searchInput = this.container.find('input[type=\"search\"]');\n        this.searchForm = this.container.find('form');\n\n\n        this.initEvents();\n    }\n\n    getTemplate() {\n\n        let options = this.options;\n        return `\n            <form class=\"component-searchbar-form\" action=\"${options.action}\" method=\"${options.method}\">\n                <div class=\"component-searchbar-input\">\n                    <input type=\"search\" name=\"${options.field}\" placeholder=\"${options.placeholder||''}\"/>\n                </div>\n                <button type=\"submit\" class=\"ion-ios-search\"></button>\n            </form>\n        `;\n    }\n\n\n    initEvents() {\n\n        let self = this;\n        let options = self.options;\n\n        self.searchForm\n            .on('submit', function (e) {\n\n                e.preventDefault();\n\n                let postData = {};\n                postData[options.field] = self.searchInput.val().trim();\n\n                if (options.getParams) {\n                    postData = options.getParams(postData);\n                }\n\n\n                postJson(\n                    options.action,\n                    postData,\n                    (data) => {\n                        options.searched.call(self, data);\n                    }\n                );\n\n            })\n            .on('click', function (e) {\n                self.focus();\n            });\n\n        $(document).on('click', function (e) {\n            let form = self.searchForm[0];\n\n            if (!$.contains(form, e.target)) {\n                self.blur();\n            }\n        });\n    }\n\n    /**\n     * 激活searchbar\n     *\n     * @param {Boolean} selfTrigger 是否是由输入框触发的\n     */\n    focus(selfTrigger) {\n        this.active = true;\n        this.container.addClass('active');\n        !selfTrigger && this.searchInput.focus();\n    }\n\n    /**\n     * 移除searchbar 的激活状态\n     *\n     * @param {Boolean} selfTrigger 是否是由输入框触发的\n     */\n    blur(selfTrigger) {\n        this.active = false;\n        this.container.removeClass('active');\n        !selfTrigger && this.searchInput.blur();\n\n    }\n}\n"]}