{"version":3,"sources":["../../src/components/WS.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AAEO,IAAM,kCAAa,CAAC,EAAE,OAAO,SAAP,IAAoB,OAAO,YAA7B,CAApB,C;;;;;AAEP,IAAM,YAAY,OAAO,SAAP,IAAoB,OAAO,YAA7C;;IAEa,e,WAAA,e;;;AACT,6BAAY,GAAZ,EAAiB,SAAjB,EAA4B;AAAA;;AAAA;;AAGxB,YAAI,SAAJ,EAAe;AACX,kBAAK,EAAL,GAAU,IAAI,SAAJ,CAAc,GAAd,EAAmB,SAAnB,CAAV;AACH,SAFD,MAGK;AACD,kBAAK,EAAL,GAAU,IAAI,SAAJ,CAAc,GAAd,CAAV;AACH;AACD,cAAK,UAAL;AATwB;AAU3B;;;;oCAEW;AACR,gBAAI,MAAM,IAAV;AACA,gBAAI,cAAJ;AACA,gBAAI,UAAJ,GAAiB,OAAO,WAAP,CAAmB,YAAY;AAC5C,oBAAI,cAAJ;AACH,aAFgB,EAEd,KAFc,CAAjB;AAGH;;;qCAGY;AACT,gBAAI,MAAM,IAAV;AACA,gBAAI,KAAK,IAAI,EAAb;AACA,eAAG,MAAH,GAAY,UAAC,GAAD,EAAS;AACjB,oBAAI,IAAJ,CAAS,MAAT,EAAiB,GAAjB;AACA,oBAAI,SAAJ;AACH,aAHD;;AAKA,eAAG,OAAH,GAAa,UAAC,GAAD,EAAS;AAClB,oBAAI,IAAJ,CAAS,OAAT,EAAkB,GAAlB;AACA,uBAAO,aAAP,CAAqB,IAAI,UAAzB;AACH,aAHD;;AAKA,eAAG,SAAH,GAAe,UAAC,GAAD,EAAS;AACpB,oBAAI,IAAJ,CAAS,SAAT,EAAoB,GAApB;AACH,aAFD;;AAIA,eAAG,OAAH,GAAa,UAAC,GAAD,EAAS;AAClB,oBAAI,IAAJ,CAAS,OAAT,EAAkB,GAAlB;AACH,aAFD;AAIH;;;yCAEgB;AACb,iBAAK,IAAL,CAAU;AACN,sBAAM;AADA,aAAV;AAGH;;;6BAEI,I,EAAM;AACP,iBAAK,EAAL,CAAQ,IAAR,CAAa,yBAAe,IAAf,CAAb;AACH;;;gCAEO;AACJ,iBAAK,EAAL,CAAQ,KAAR;AACH","file":"WS.js","sourcesContent":["/**\n * @file WebSocket封装\n * @author peilonghui\n */\n\nimport {EventObserver} from './EventObserver';\n\nexport const IF_SUPPORT = !!(window.WebSocket || window.MozWebSocket);\n\nconst WebSocket = window.WebSocket || window.MozWebSocket;\n\nexport class CustomWebSocket extends EventObserver {\n    constructor(url, protocols) {\n        super();\n\n        if (protocols) {\n            this.ws = new WebSocket(url, protocols);\n        }\n        else {\n            this.ws = new WebSocket(url);\n        }\n        this.bindEvents();\n    }\n\n    keepAlive() {\n        let cws = this;\n        cws.startHeartBeat();\n        cws.wsInterval = window.setInterval(function () {\n            cws.startHeartBeat();\n        }, 20000);\n    }\n\n\n    bindEvents() {\n        let cws = this;\n        let ws = cws.ws;\n        ws.onopen = (evt) => {\n            cws.fire('open', evt);\n            cws.keepAlive();\n        };\n\n        ws.onclose = (evt) => {\n            cws.fire('close', evt);\n            window.clearInterval(cws.wsInterval);\n        };\n\n        ws.onmessage = (evt) => {\n            cws.fire('message', evt);\n        };\n\n        ws.onerror = (evt) => {\n            cws.fire('error', evt);\n        };\n\n    }\n\n    startHeartBeat() {\n        this.send({\n            type: 'ping'\n        });\n    }\n\n    send(data) {\n        this.ws.send(JSON.stringify(data));\n    }\n\n    close() {\n        this.ws.close();\n    }\n}\n"]}