{"version":3,"sources":["../../src/components/WS.js"],"names":["IF_SUPPORT","window","WebSocket","MozWebSocket","CustomWebSocket","url","protocols","ws","bindEvents","cws","startHeartBeat","wsInterval","setInterval","onopen","evt","fire","keepAlive","onclose","clearInterval","onmessage","onerror","send","type","data","close"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AAEO,IAAMA,kCAAa,CAAC,EAAEC,OAAOC,SAAP,IAAoBD,OAAOE,YAA7B,CAApB;;AAEP,IAAMD,YAAYD,OAAOC,SAAP,IAAoBD,OAAOE,YAA7C;;IAEaC,e,WAAAA,e;;;AACT,6BAAYC,GAAZ,EAAiBC,SAAjB,EAA4B;AAAA;;AAAA;;AAExB,YAAIA,SAAJ,EAAe;AACX,kBAAKC,EAAL,GAAU,IAAIL,SAAJ,CAAcG,GAAd,EAAmBC,SAAnB,CAAV;AACH,SAFD,MAGK;AACD,kBAAKC,EAAL,GAAU,IAAIL,SAAJ,CAAcG,GAAd,CAAV;AACH;AACD,cAAKG,UAAL;AARwB;AAS3B;;;;oCAEW;AACR,gBAAIC,MAAM,IAAV;AACAA,gBAAIC,cAAJ;AACAD,gBAAIE,UAAJ,GAAiBV,OAAOW,WAAP,CAAmB,YAAY;AAC5CH,oBAAIC,cAAJ;AACH,aAFgB,EAEd,KAFc,CAAjB;AAGH;;;qCAGY;AACT,gBAAID,MAAM,IAAV;AACA,gBAAIF,KAAKE,IAAIF,EAAb;AACAA,eAAGM,MAAH,GAAY,UAACC,GAAD,EAAS;AACjBL,oBAAIM,IAAJ,CAAS,MAAT,EAAiBD,GAAjB;AACAL,oBAAIO,SAAJ;AACH,aAHD;;AAKAT,eAAGU,OAAH,GAAa,UAACH,GAAD,EAAS;AAClBL,oBAAIM,IAAJ,CAAS,OAAT,EAAkBD,GAAlB;AACAb,uBAAOiB,aAAP,CAAqBT,IAAIE,UAAzB;AACH,aAHD;;AAKAJ,eAAGY,SAAH,GAAe,UAACL,GAAD,EAAS;AACpBL,oBAAIM,IAAJ,CAAS,SAAT,EAAoBD,GAApB;AACH,aAFD;;AAIAP,eAAGa,OAAH,GAAa,UAACN,GAAD,EAAS;AAClBL,oBAAIM,IAAJ,CAAS,OAAT,EAAkBD,GAAlB;AACH,aAFD;AAIH;;;yCAEgB;AACb,iBAAKO,IAAL,CAAU;AACNC,sBAAM;AADA,aAAV;AAGH;;;6BAEIC,I,EAAM;AACP,iBAAKhB,EAAL,CAAQc,IAAR,CAAa,yBAAeE,IAAf,CAAb;AACH;;;gCAEO;AACJ,iBAAKhB,EAAL,CAAQiB,KAAR;AACH","file":"WS.js","sourcesContent":["/**\n * @file WebSocket封装\n * @author peilonghui\n */\n\nimport {EventObserver} from './EventObserver';\n\nexport const IF_SUPPORT = !!(window.WebSocket || window.MozWebSocket);\n\nconst WebSocket = window.WebSocket || window.MozWebSocket;\n\nexport class CustomWebSocket extends EventObserver {\n    constructor(url, protocols) {\n        super();\n        if (protocols) {\n            this.ws = new WebSocket(url, protocols);\n        }\n        else {\n            this.ws = new WebSocket(url);\n        }\n        this.bindEvents();\n    }\n\n    keepAlive() {\n        let cws = this;\n        cws.startHeartBeat();\n        cws.wsInterval = window.setInterval(function () {\n            cws.startHeartBeat();\n        }, 20000);\n    }\n\n\n    bindEvents() {\n        let cws = this;\n        let ws = cws.ws;\n        ws.onopen = (evt) => {\n            cws.fire('open', evt);\n            cws.keepAlive();\n        };\n\n        ws.onclose = (evt) => {\n            cws.fire('close', evt);\n            window.clearInterval(cws.wsInterval);\n        };\n\n        ws.onmessage = (evt) => {\n            cws.fire('message', evt);\n        };\n\n        ws.onerror = (evt) => {\n            cws.fire('error', evt);\n        };\n\n    }\n\n    startHeartBeat() {\n        this.send({\n            type: 'ping'\n        });\n    }\n\n    send(data) {\n        this.ws.send(JSON.stringify(data));\n    }\n\n    close() {\n        this.ws.close();\n    }\n}\n"]}