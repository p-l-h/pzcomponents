{"version":3,"sources":["../../src/components/Recorder.js"],"names":["Recorder","options","init","self","main","$","getTemplate","panel","inner","counterEm","find","bindEvents","on","e","recording","timeCounter","stopRecord","startRecord","addClass","html","startRecordTimer","onVoiceRecordEnd","localId","voiceRecorded","recordInterval","window","setInterval","seconds","clearInterval","hide","success","removeClass","show"],"mappings":";;;;;;;;;;;;;;AACA;;AAEA;;;;IAEqBA,Q;AACjB,sBAAYC,OAAZ,EAAqB;AAAA;;AACjB,aAAKA,OAAL,GAAeA,OAAf;AACA,aAAKC,IAAL;AACH;;;;+BAEM;;AAEH,gBAAIC,OAAO,IAAX;;AAEAA,iBAAKC,IAAL,GAAYC,EAAEF,KAAKG,WAAL,EAAF,CAAZ;AACAH,iBAAKI,KAAL,GAAa,iBAAU;AACnBC,uBAAOL,KAAKC;AADO,aAAV,CAAb;AAGAD,iBAAKM,SAAL,GAAiBN,KAAKC,IAAL,CAAUM,IAAV,CAAe,IAAf,CAAjB;;AAEAP,iBAAKQ,UAAL;AACH;;;sCAEa;AACV;AAOH;;;qCAEY;AACT,gBAAIR,OAAO,IAAX;AACA,gBAAIC,OAAOD,KAAKC,IAAhB;;AAEAA,iBAAKQ,EAAL,CAAQ,OAAR,EAAiB,QAAjB,EAA2B,UAACC,CAAD,EAAO;;AAE9B,oBAAIV,KAAKW,SAAL,IAAkBX,KAAKY,WAAL,GAAmB,CAAzC,EAA4C;AACxC;AACH;;AAED,oBAAIZ,KAAKW,SAAT,EAAoB;AAChBX,yBAAKa,UAAL;AACH,iBAFD,MAGK;AACDb,yBAAKc,WAAL;AACH;AACJ,aAZD;AAaH;;;sCAEa;AACV,gBAAId,OAAO,IAAX;AACAA,iBAAKW,SAAL,GAAiB,IAAjB;AACA,iCAAUG,WAAV;AACAd,iBAAKC,IAAL,CAAUc,QAAV,CAAmB,QAAnB;AACAf,iBAAKM,SAAL,CAAeU,IAAf,CAAoB,CAApB;;AAEAhB,iBAAKiB,gBAAL;;AAEA,iCAAUC,gBAAV,CACI,UAAUC,OAAV,EAAmB;AACfnB,qBAAKoB,aAAL,CAAmBD,OAAnB,EAA4B,EAA5B;AACAnB,qBAAKY,WAAL,GAAmB,CAAnB;AACH,aAJL;AAMH;;;qCAEY;AACT,gBAAIZ,OAAO,IAAX;;AAEA,iCAAUa,UAAV,CACI,UAASM,OAAT,EAAkB;AACdnB,qBAAKoB,aAAL,CAAmBD,OAAnB,EAA4BnB,KAAKY,WAAjC;AACH,aAHL;AAKH;;;2CAEkB;AACf,gBAAIZ,OAAO,IAAX;AACAA,iBAAKY,WAAL,GAAmB,CAAnB;AACAZ,iBAAKqB,cAAL,GAAsBC,OAAOC,WAAP,CAClB,YAAY;AACRvB,qBAAKY,WAAL;AACAZ,qBAAKM,SAAL,CAAeU,IAAf,CAAoBhB,KAAKY,WAAzB;AACH,aAJiB,EAKlB,IALkB,CAAtB;AAOH;;;sCAEaO,O,EAASK,O,EAAS;AAC5B,gBAAIxB,OAAO,IAAX;AACA,gBAAIF,UAAUE,KAAKF,OAAnB;AACAwB,mBAAOG,aAAP,CAAqBzB,KAAKqB,cAA1B;AACArB,iBAAKW,SAAL,GAAiB,KAAjB;AACAX,iBAAK0B,IAAL;;AAGA,gBAAI5B,QAAQ6B,OAAZ,EAAqB;AACjB7B,wBAAQ6B,OAAR,CAAgBR,OAAhB,EAAyBK,OAAzB;AACH;AACJ;;;+BAEM;AACH,iBAAKvB,IAAL,CAAU2B,WAAV,CAAsB,QAAtB;AACA,iBAAKxB,KAAL,CAAWyB,IAAX;AACH;;;+BAEM;AACH,iBAAKzB,KAAL,CAAWsB,IAAX;AACH;;;;;kBA3GgB7B,Q","file":"Recorder.js","sourcesContent":["\nimport {Panel} from './Panel';\n\nimport { weixinApi } from '../common/functions/weixinApi';\n\nexport default class Recorder {\n    constructor(options) {\n        this.options = options;\n        this.init();\n    }\n\n    init() {\n\n        let self = this;\n\n        self.main = $(self.getTemplate());\n        self.panel = new Panel({\n            inner: self.main\n        });\n        self.counterEm = self.main.find('em');\n\n        self.bindEvents();\n    }\n\n    getTemplate() {\n        return `\n            <div class=\"component-recorder\">\n                <div class=\"component-recorder-text\">点击录音</div>\n                <div class=\"component-recorder-text active\"><em>0</em>s/60s</div>\n                <button type=\"button\"></button>\n            </div>\n        `;\n    }\n\n    bindEvents() {\n        let self = this;\n        let main = self.main;\n\n        main.on('click', 'button', (e) => {\n\n            if (self.recording && self.timeCounter < 1) {\n                return;\n            }\n\n            if (self.recording) {\n                self.stopRecord();\n            }\n            else {\n                self.startRecord();\n            }\n        });\n    }\n\n    startRecord() {\n        let self = this;\n        self.recording = true;\n        weixinApi.startRecord();\n        self.main.addClass('active');\n        self.counterEm.html(0);\n\n        self.startRecordTimer();\n\n        weixinApi.onVoiceRecordEnd(\n            function (localId) {\n                self.voiceRecorded(localId, 60);\n                self.timeCounter = 0;\n            }\n        );\n    }\n\n    stopRecord() {\n        let self = this;\n\n        weixinApi.stopRecord(\n            function(localId) {\n                self.voiceRecorded(localId, self.timeCounter);\n            }\n        );\n    }\n\n    startRecordTimer() {\n        let self = this;\n        self.timeCounter = 0;\n        self.recordInterval = window.setInterval(\n            function () {\n                self.timeCounter++;\n                self.counterEm.html(self.timeCounter);\n            },\n            1000\n        );\n    }\n\n    voiceRecorded(localId, seconds) {\n        let self = this;\n        let options = self.options;\n        window.clearInterval(self.recordInterval);\n        self.recording = false;\n        self.hide();\n\n\n        if (options.success) {\n            options.success(localId, seconds);\n        }\n    }\n\n    show() {\n        this.main.removeClass('active');\n        this.panel.show();\n    }\n\n    hide() {\n        this.panel.hide();\n    }\n\n}\n"]}