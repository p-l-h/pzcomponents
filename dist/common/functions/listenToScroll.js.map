{"version":3,"sources":["../../../src/common/functions/listenToScroll.js"],"names":["listenToScroll","unListenToScroll","elem","callback","lastScrollTop","scrollTop","scrollY","handler","e","timer","clearTimeout","setTimeout","currentScrollTop","direction","event","__scrollHandlers","push","document","body","documentElement","window","addEventListener","newHandlers","oldElem","forEach","item","removeEventListener"],"mappings":";;;;;QAMgBA,c,GAAAA,c;QA6BAC,gB,GAAAA,gB;AA7BT,SAASD,cAAT,CAAwBE,IAAxB,EAA8BC,QAA9B,EAAwC;AAC3C,QAAIC,gBAAgBF,KAAKG,SAAL,IAAkBH,KAAKI,OAA3C;AACA,QAAMC,UAAW,SAAXA,OAAW,CAACC,CAAD,EAAM;AACnBD,gBAAQE,KAAR,IAAiBC,aAAaH,QAAQE,KAArB,CAAjB;AACAF,gBAAQE,KAAR,GAAgBE,WACZ,YAAM;AACF,gBAAIC,mBAAmBV,KAAKG,SAAL,IAAkBH,KAAKI,OAA9C;AACA,gBAAIO,YAAY,MAAhB;AACA,gBAAIT,gBAAgBQ,gBAApB,EAAsC;AAClCC,4BAAY,IAAZ;AACH;AACDT,4BAAgBQ,gBAAhB;AACAT,qBAAS;AACLU,2BAAWA,SADN;AAELC,uBAAON;AAFF,aAAT;AAIH,SAZW,EAaZ,GAbY,CAAhB;AAeH,KAjBD;AAkBAD,YAAQJ,QAAR,GAAmBA,QAAnB;AACAD,SAAKa,gBAAL,GAAwBb,KAAKa,gBAAL,IAAyB,EAAjD;AACAb,SAAKa,gBAAL,CAAsBC,IAAtB,CAA2BT,OAA3B;AACA,QAAIL,SAASe,QAAT,IAAqBf,SAASe,SAASC,IAAvC,IAA+ChB,SAASe,SAASE,eAArE,EAAsF;AAClFjB,eAAOkB,MAAP;AACH;AACDlB,SAAKmB,gBAAL,CAAsB,QAAtB,EAAgCd,OAAhC;AACH;;AAEM,SAASN,gBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2C;AAC9CD,SAAKa,gBAAL,GAAwBb,KAAKa,gBAAL,IAAyB,EAAjD;AACA,QAAMO,cAAc,EAApB;AACA,QAAMC,UAAUrB,IAAhB;;AAEAA,SAAKa,gBAAL,CAAsBS,OAAtB,CACI,UAACC,IAAD,EAAU;AACN,YAAIA,KAAKtB,QAAL,KAAkBA,QAAtB,EAAgC;AAC5BO,yBAAae,KAAKhB,KAAlB;AACAP,mBAAQA,SAASe,SAASC,IAAnB,GAA2BD,QAA3B,GAAsCf,IAA7C;AACAA,iBAAKwB,mBAAL,CAAyB,QAAzB,EAAmCD,IAAnC;AACH,SAJD,MAIO;AACHH,wBAAYN,IAAZ,CAAiBS,IAAjB;AACH;AACJ,KATL;AAWAF,YAAQR,gBAAR,GAA2BO,WAA3B;AACH","file":"listenToScroll.js","sourcesContent":["\n/**\n * 监听滚轮事件\n * @author peilonghui\n */\n\nexport function listenToScroll(elem, callback) {\n    let lastScrollTop = elem.scrollTop || elem.scrollY;\n    const handler =  (e) =>{\n        handler.timer && clearTimeout(handler.timer);\n        handler.timer = setTimeout(\n            () => {\n                let currentScrollTop = elem.scrollTop || elem.scrollY;\n                let direction = 'down';\n                if (lastScrollTop > currentScrollTop) {\n                    direction = 'up';\n                }\n                lastScrollTop = currentScrollTop;\n                callback({\n                    direction: direction,\n                    event: e\n                });\n            },\n            500\n        );\n    };\n    handler.callback = callback;\n    elem.__scrollHandlers = elem.__scrollHandlers || [];\n    elem.__scrollHandlers.push(handler);\n    if (elem === document || elem === document.body || elem === document.documentElement) {\n        elem = window;\n    }\n    elem.addEventListener('scroll', handler);\n};\n\nexport function unListenToScroll (elem, callback) {\n    elem.__scrollHandlers = elem.__scrollHandlers || [];\n    const newHandlers = [];\n    const oldElem = elem;\n    \n    elem.__scrollHandlers.forEach(\n        (item) => {\n            if (item.callback === callback) {\n                clearTimeout(item.timer);\n                elem = (elem === document.body) ? document : elem;\n                elem.removeEventListener('scroll', item);\n            } else {\n                newHandlers.push(item);\n            }\n        }\n    );\n    oldElem.__scrollHandlers = newHandlers;\n};\n\n\n    "]}