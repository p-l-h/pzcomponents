{"version":3,"sources":["../../../src/common/functions/request.js"],"names":[],"mappings":";;;;;;;;;;;QASgB,O,GAAA,O;QA0EA,Q,GAAA,Q;;AAjFhB;;;;AAEA,EAAE,QAAF,EAAY,EAAZ,CAAe,WAAf,EAA4B,UAAC,GAAD,EAAM,OAAN,EAAe,KAAf,EAAyB;AACjD;AACA,sBAAM,MAAN;AACH,CAHD;;AAKO,SAAS,OAAT,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC;;AAEzC;AACA,WAAO,EAAE,OAAF,CACH,MAAM,GAAN,GAAY,EAAE,KAAF,CAAQ,IAAR,CADT,EAEH,UAAC,QAAD,EAAc;AACV;AACA,YAAI,YAAa,CAAC,SAAS,IAAV,KAAmB,CAApC,EAAyC;AACrC,oBAAQ,SAAS,IAAjB;AACH,SAFD,MAGK;AACD,8BAAM,SAAS,GAAT,IAAgB,OAAtB;AACH;AACJ,KAVE,CAAP;AAYH;;AAEM,SAAS,MAAT,CAAgB,GAAhB,EAAqB,IAArB,EAA2B,QAA3B,EAAoC,MAApC,EAA4C;AAC/C;;AAEA,WAAO,EAAE,IAAF,CACH;AACI,aAAK,GADT;AAEI,cAAM,IAFV;AAGI,cAAM,MAHV;AAII,iBAAS,iBAAC,QAAD,EAAc;AACnB;AACA,gBAAI,YAAa,CAAC,SAAS,IAAV,KAAmB,CAApC,EAAwC;AACpC,yBAAQ,SAAS,IAAjB;AACH,aAFD,MAGK;AACD,kCAAM,SAAS,GAAT,IAAgB,OAAtB;AACH;AACD,sBAAU,OAAO,QAAP,CAAV;AACH,SAbL;AAcI,eAAO,iBAAM;AACT,8BAAM,OAAN;AACH,SAhBL;AAiBI,kBAAU,oBAAM;AACb;AACF;AAnBL,KADG,CAAP;AAwBH;;;AAEM,SAAS,QAAT,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,SAA9B,EAAuC,MAAvC,EAA+C;AAClD;AACA,WAAO,EAAE,IAAF,CACH;AACI,aAAK,GADT;AAEI,cAAM,yBAAe,IAAf,CAFV;AAGI,cAAM,MAHV;AAII,qBAAa,kBAJjB;AAKI,iBAAS,iBAAC,QAAD,EAAc;AACnB;AACA,gBAAI,YAAa,CAAC,SAAS,IAAV,KAAmB,CAApC,EAAwC;AACpC,0BAAQ,SAAS,IAAjB;AACH,aAFD,MAGK;AACD,kCAAM,SAAS,GAAT,IAAgB,OAAtB;AACH;AACD,sBAAU,OAAO,QAAP,CAAV;AACH,SAdL;AAeI,eAAO,iBAAM;AACT,8BAAM,OAAN;AACH,SAjBL;AAkBI,kBAAU,oBAAM;AACb;AACF;AApBL,KADG,CAAP;AAwBH;;;AAEM,SAAS,QAAT,CAAkB,GAAlB,EAAuB,QAAvB,EAAiC;AACpC,MAAE,IAAF,CAAO;AACH,aAAK,GADF;AAEH,kBAAU,OAFP;AAGH,iBAAU,iBAAC,QAAD,EAAc;AACpB,qBAAS,QAAT;AACH;AALE,KAAP;AAOH","file":"request.js","sourcesContent":["\n\nimport {toast, loading, unloading} from '../../components/Toast';\n\n$(document).on('ajaxError', (xhr, options, error) => {\n    unloading();\n    toast('请求异常');\n});\n\nexport function getJson (url, data, success) {\n\n    loading();\n    return $.getJSON(\n        url + '?' + $.param(data),\n        (response) => {\n            unloading();\n            if (response && (+response.code === 0 )) {\n                success(response.data);\n            }\n            else {\n                toast(response.msg || '请求出错了');\n            }\n        }\n    );\n}\n\nexport function doPost(url, data, success, always) {\n    loading();\n\n    return $.ajax(\n        {\n            url: url,\n            data: data,\n            type: 'POST',\n            success: (response) => {\n                unloading();\n                if (response && (+response.code === 0)) {\n                    success(response.data);\n                }\n                else {\n                    toast(response.msg || '请求出错了');\n                }\n                always && always(response);\n            },\n            error: () => {\n                toast('请求出错了');\n            },\n            complete: () => {\n               unloading();\n            }\n        }\n    );\n\n}\n\nexport function postJson (url, data, success, always) {\n    loading();\n    return $.ajax(\n        {\n            url: url,\n            data: JSON.stringify(data),\n            type: 'POST',\n            contentType: 'application/json',\n            success: (response) => {\n                unloading();\n                if (response && (+response.code === 0)) {\n                    success(response.data);\n                }\n                else {\n                    toast(response.msg || '请求出错了');\n                }\n                always && always(response);\n            },\n            error: () => {\n                toast('请求出错了');\n            },\n            complete: () => {\n               unloading();\n            }\n        }\n    );\n}\n\nexport function getJsonp(url, callback) {\n    $.ajax({\n        url: url,\n        dataType: 'jsonp',\n        success:  (response) => {\n            callback(response);\n        }\n    });\n}\n"]}