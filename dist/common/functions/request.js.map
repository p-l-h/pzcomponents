{"version":3,"sources":["../../../src/common/functions/request.js"],"names":["getJsonp","$","document","on","xhr","options","error","getJson","url","data","success","always","ajax","type","dataType","response","code","msg","complete","doPost","postJson","contentType","callback"],"mappings":";;;;;;;;;;;QA8FgBA,Q,GAAAA,Q;;AA5FhB;;;;AAEAC,EAAEC,QAAF,EAAYC,EAAZ,CAAe,WAAf,EAA4B,UAACC,GAAD,EAAMC,OAAN,EAAeC,KAAf,EAAyB;AAEjD,sBAAM,MAAN;AACH,CAHD;;AAKO,SAASC,OAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAsCJ,MAAtC,EAA6CK,MAA7C,EAAqD;AACxD,WAAOV,EAAEW,IAAF,CACH;AACIJ,gBADJ;AAEIC,kBAFJ;AAGII,cAAM,KAHV;AAIIC,kBAAU,MAJd;AAKIJ,iBAAS,iBAACK,QAAD,EAAc;AACnB,gBAAIA,YAAa,CAACA,SAASC,IAAV,KAAmB,CAApC,EAAyC;AACrCN,yBAAQK,SAASN,IAAjB;AACH,aAFD,MAGK;AACD,kCAAMM,SAASE,GAAT,IAAgB,OAAtB;AACAX,0BAASA,OAAMS,QAAN,CAAT;AACH;AACJ,SAbL;AAcIT,eAAO,iBAAM;AACTA,sBAASA,QAAT;AACH,SAhBL;AAiBIY,kBAAU,oBAAO;AACbP,sBAAUA,QAAV;AACH;AAnBL,KADG,CAAP;AAuBH;;;AAEM,SAASQ,MAAT,CAAgBX,GAAhB,EAAqBC,IAArB,EAA2BC,SAA3B,EAAmCJ,OAAnC,EAA0CK,MAA1C,EAAkD;AACrD,WAAOV,EAAEW,IAAF,CACH;AACIJ,aAAKA,GADT;AAEIC,cAAMA,IAFV;AAGII,cAAM,MAHV;AAIIH,iBAAS,iBAACK,QAAD,EAAc;AACnB,gBAAIA,YAAa,CAACA,SAASC,IAAV,KAAmB,CAApC,EAAwC;AACpCN,0BAAQK,SAASN,IAAjB;AACH,aAFD,MAGK;AACD,kCAAMM,SAASE,GAAT,IAAgB,OAAtB;AACAX,2BAASA,QAAMS,QAAN,CAAT;AACH;AAEJ,SAbL;AAcIT,eAAO,iBAAM;AACT,8BAAM,OAAN;AACAA,uBAASA,SAAT;AAEH,SAlBL;AAmBIY,kBAAU,oBAAM;AACbP,sBAAUA,QAAV;AACF;AArBL,KADG,CAAP;AA0BH;;;AAEM,SAASS,QAAT,CAAmBZ,GAAnB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAuCJ,OAAvC,EAA8CK,MAA9C,EAAsD;AAEzD,WAAOV,EAAEW,IAAF,CACH;AACIJ,aAAKA,GADT;AAEIC,cAAM,yBAAeA,IAAf,CAFV;AAGII,cAAM,MAHV;AAIIQ,qBAAa,kBAJjB;AAKIX,iBAAS,iBAACK,QAAD,EAAc;AACnB,gBAAIA,YAAa,CAACA,SAASC,IAAV,KAAmB,CAApC,EAAwC;AACpCN,0BAAQK,SAASN,IAAjB;AACH,aAFD,MAGK;AACD,kCAAMM,SAASE,GAAT,IAAgB,OAAtB;AACAX,2BAASA,QAAMS,QAAN,CAAT;AACH;AAEJ,SAdL;AAeIT,eAAO,iBAAM;AACT,8BAAM,OAAN;AACAA,uBAASA,SAAT;AACH,SAlBL;AAmBIY,kBAAU,oBAAM;AAEbP,sBAAUA,QAAV;AACF;AAtBL,KADG,CAAP;AA0BH;;;AAEM,SAASX,QAAT,CAAkBQ,GAAlB,EAAuBc,QAAvB,EAAiC;AACpCrB,MAAEW,IAAF,CAAO;AACHJ,aAAKA,GADF;AAEHM,kBAAU,OAFP;AAGHJ,iBAAU,iBAACK,QAAD,EAAc;AACpBO,qBAASP,QAAT;AACH;AALE,KAAP;AAOH","file":"request.js","sourcesContent":["\n\nimport {toast, loading, unloading} from '../../components/Toast';\n\n$(document).on('ajaxError', (xhr, options, error) => {\n    // unloading();\n    toast('请求异常');\n});\n\nexport function getJson (url, data, success, error, always) {\n    return $.ajax(\n        {\n            url,\n            data,\n            type: 'GET',\n            dataType: 'json',\n            success: (response) => {\n                if (response && (+response.code === 0 )) {\n                    success(response.data);\n                }\n                else {\n                    toast(response.msg || '请求出错了');\n                    error && error(response);\n                }\n            },\n            error: () => {\n                error && error();\n            },\n            complete: () =>  {\n                always && always();\n            }\n        }\n    );\n}\n\nexport function doPost(url, data, success,error, always) {\n    return $.ajax(\n        {\n            url: url,\n            data: data,\n            type: 'POST',\n            success: (response) => {\n                if (response && (+response.code === 0)) {\n                    success(response.data);\n                }\n                else {\n                    toast(response.msg || '请求出错了');\n                    error && error(response);\n                }\n\n            },\n            error: () => {\n                toast('请求出错了');\n                error && error();\n\n            },\n            complete: () => {\n               always && always();\n            }\n        }\n    );\n\n}\n\nexport function postJson (url, data, success, error, always) {\n    // loading();\n    return $.ajax(\n        {\n            url: url,\n            data: JSON.stringify(data),\n            type: 'POST',\n            contentType: 'application/json',\n            success: (response) => {\n                if (response && (+response.code === 0)) {\n                    success(response.data);\n                }\n                else {\n                    toast(response.msg || '请求出错了');\n                    error && error(response);\n                }\n\n            },\n            error: () => {\n                toast('请求出错了');\n                error && error();\n            },\n            complete: () => {\n            //    unloading();\n               always && always();\n            }\n        }\n    );\n}\n\nexport function getJsonp(url, callback) {\n    $.ajax({\n        url: url,\n        dataType: 'jsonp',\n        success:  (response) => {\n            callback(response);\n        }\n    });\n}\n"]}